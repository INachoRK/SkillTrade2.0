package co.edu.uco.tiendachepito.business.facade.concrete;

import co.edu.uco.tiendachepito.business.facade.RegistrarCiudadFachada;
import co.edu.uco.tiendachepito.business.usecase.RegistrarCiudad;
import co.edu.uco.tiendachepito.business.usecase.impl.RegistrarCiudadImpl;
import co.edu.uco.tiendachepito.crosscutting.exceptions.TiendaChepitoException;
import co.edu.uco.tiendachepito.crosscutting.exceptions.custom.BusinessTiendaChepitoException;
import co.edu.uco.tiendachepito.data.dao.factory.DAOFactory;
import co.edu.uco.tiendachepito.dto.CiudadDTO;

public class RegistrarCiudadFchadaImpl implements RegistrarCiudadFachada {
	
	private DAOFactory factory;
	
	public RegistrarCiudadFachadaImpl() {
		factory = DAOFactory.getFactory(Factory.AZURESQL);
	}
	
	public final void ejecutar(final CiudadDTO ciudad) {
		try {
			factory.iniciarTransaccion();
			
			var ciudadDomain = CiudadDTODomainAssembler.obtenerInstancia().ensamblarDominio();
			
			RegistrarCiudad useCase = new RegistrarCiudadImpl(factory);
			useCase.ejecutar(null);
			
			factory.confirmarTransaccion();
		}catch (final TiendaChepitoException excepcion) {
			factory.cancelarTransaccion();
			throw excepcion;
		}catch (final Exception excepcion) {
			factory.cancelarTransaccion();
			
			var mensajeUsuario = "Se ha presentado un problema tratando de Registrar la información de una nueva ciudad";
			var mensajeTecnico = "Se ha presentado un problema INESPERADO tratando de ejecutar el método de la clase RegistrarCiudadFchadaImpl. Por favor revise la traza completa del problema";
		
			throw new BusinessTiendaChepitoException(mensajeTecnico, mensajeUsuario);
			
		} finally {
			factory.cerrarConexion();
		}
	}

}
