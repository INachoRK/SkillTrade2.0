package co.edu.uco.skilltrade.data.dao.sql.azuresql;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import co.edu.uco.skilltrade.crosscutting.exceptions.custom.DataSkillTradeException;
import co.edu.uco.skilltrade.crosscutting.exceptions.messagecatalog.MessageCatalogStrategy;
import co.edu.uco.skilltrade.crosscutting.exceptions.messagecatalog.data.CodigoMensaje;
import co.edu.uco.skilltrade.data.dao.CursoDAO;
import co.edu.uco.skilltrade.data.dao.sql.SqlConnection;
import co.edu.uco.skilltrade.entity.CursoEntity;

public final class CursoAzureSqlDAO extends SqlConnection implements CursoDAO {

	public CursoAzureSqlDAO(final Connection connection) {
		super(connection);
	}

	@Override
	public final void crear(final CursoEntity entidad) {
		final var sentenciaSql = new StringBuilder();
		
		sentenciaSql.append("INSERT INTO dbo.Curso ");
		sentenciaSql.append("(titulo, descripcion, categoria, subcategoria) ");
		sentenciaSql.append("VALUES (?, ?, ?, ?)");
				
        try (final PreparedStatement sentenciaPreparada = getConnection().prepareStatement(sentenciaSql.toString())){
        	sentenciaPreparada.setString(1, entidad.getTitulo());
            sentenciaPreparada.setString(2, entidad.getDescripcion());
            sentenciaPreparada.setString(3, entidad.getCategoria());
            sentenciaPreparada.setString(4, entidad.getSubcategoria());
            

            sentenciaPreparada.executeUpdate();
        } catch (SQLException exception){
            var mensajeUsuario = "No ha sido posible llevar a cabo el registro de la información del nuevo curso. Por favor intente de nuevo y en caso de pérsisitir el problema, comuniquese con el administrador de la Tienda Chepito...";
            var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00021, entidad.getTitulo());

            throw new DataSkillTradeException(mensajeTecnico, mensajeUsuario, exception);
        }catch (final Exception exception){
            var mensajeUsuario = "No ha sido posible llevar a cabo el registro de la informacion del nuevo pais. Por favor intente de nuevo y en caso de pérsisitir el problema, comuniquese con el administrador de la Tienda Chepito...";
            var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00022, entidad.getTitulo());

            throw new DataSkillTradeException(mensajeTecnico, mensajeUsuario, exception);
        }

	}

	@Override
	public final void actualizar(final CursoEntity entidad) {
		final var sentenciaSql = new StringBuilder();
		
		sentenciaSql.append("UPDATE Curso");
		sentenciaSql.append("SET Titulo = ?");
		sentenciaSql.append("WHERE id = ?");
		
		try (final PreparedStatement sentenciaPreparada = getConnection().prepareStatement(sentenciaSql.toString())){
        	sentenciaPreparada.setString(1, entidad.getTitulo());
            
            

            sentenciaPreparada.executeUpdate();
        } catch (SQLException exception){
            var mensajeUsuario = "No ha sido posible llevar a cabo el registro de la información del nuevo curso. Por favor intente de nuevo y en caso de pérsisitir el problema, comuniquese con el administrador de la Tienda Chepito...";
            var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00021, entidad.getTitulo());

            throw new DataSkillTradeException(mensajeTecnico, mensajeUsuario, exception);
        }catch (final Exception exception){
            var mensajeUsuario = "No ha sido posible llevar a cabo el registro de la informacion del nuevo pais. Por favor intente de nuevo y en caso de pérsisitir el problema, comuniquese con el administrador de la Tienda Chepito...";
            var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00022, entidad.getTitulo());

            throw new DataSkillTradeException(mensajeTecnico, mensajeUsuario, exception);
        }

	}

	public final void eliminar(final int id) {
		final var sentenciaSql = new StringBuilder();
		
		sentenciaSql.append("DELETE FROM Curso");
		sentenciaSql.append("WHERE id = 1");
	}

	@Override
	public final List<CursoEntity> consultar(CursoEntity entidad) {

		final var sentenciaSql = new StringBuilder();
		
		sentenciaSql.append("SELECT id, nombre");
		sentenciaSql.append("FROM Pais");
		sentenciaSql.append("ORDER BY nombre ASC");
		
		return null;
	}

}
